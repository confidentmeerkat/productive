version: '3'
services:
  caddy:
    image: caddy:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/Caddyfile:/etc/caddy/Caddyfile  
      - ./dashboard/dist:/var/www/html
    networks:
      - n8n-network

  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=${DB_HOST}
      - DB_POSTGRESDB_PORT=${DB_PORT}
      - DB_POSTGRESDB_USER=${DB_USER}
      - DB_POSTGRESDB_PASSWORD=${DB_PASSWORD}
      - DB_POSTGRESDB_DATABASE=${N8N_DB_NAME}
      - N8N_PORT=80
      - N8N_HOST=${N8N_HOST}
      - N8N_PROTOCOL=http
    ports:
      - "5678:80"
    volumes:
      - ./n8n_data:/home/node/.n8n
    networks:
      - n8n-network

  management:
    build:
      context: ./management
      dockerfile: Dockerfile
    command: npm run start:dev
    volumes:
      - ./management:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "4000:3000"
    env_file:
      - ./management/.env
    networks:
      - n8n-network

  # dashboard:
  #   build:
  #     context: ./dashboard
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./dashboard:/usr/src/app
  #     - /usr/src/app/node_modules
  #   ports:
  #     - "4000:3000"
  #   env_file:
  #     - ./dashboard/.env
  #   networks:
  #     - n8n-network
networks:
  n8n-network:
    driver: bridge

volumes:
  n8n_data:
